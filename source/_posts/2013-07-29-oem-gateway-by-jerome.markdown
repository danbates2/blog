---
layout: post
title: OEM Gateway by Jerome Lafréchoux
date: '2013-07-29T15:28:00.002-07:00'
author: Trystan Lea
categories:
- emoncms
- raspberry pi
modified_time: '2013-08-05T09:02:44.839-07:00'
blogger_id: tag:blogger.com,1999:blog-2472065242652647619.post-476384304647745595
blogger_orig_url: http://openenergymonitor.blogspot.com/2013/07/oem-gateway-by-jerome.html
---

I would like to highlight the good and interesting work that <a href="https://github.com/Jerome-github">Jerome Lafréchoux</a>&nbsp;has been doing on developing a gateway that is intended to go beyond the current RFM2Pi interface towards something that can be used on any linux system whether a pi or any computer to take say input from a serial RFM12Pi and forward it either to local instances of emoncms or remote instances of any service (without necessarily needing a local install of emoncms).<br /><br />Here's an exerpt from Jerome's last post on the<a href="https://github.com/emoncms/raspberrypi/issues/30">&nbsp;github topic on gateway development</a>:<br /><div style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px; margin-bottom: 15px; margin-top: 15px;">"The standalone gateway seems complete enough for me to be published, although I'd rather have a little feedback before recommending it.</div><div style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px; margin-bottom: 15px; margin-top: 15px;"><a href="https://github.com/Jerome-github/oem_gateway" style="color: #4183c4; text-decoration: initial;">https://github.com/Jerome-github/oem_gateway</a></div><div style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px; margin-bottom: 15px; margin-top: 15px;">It works basically the same way. Here are the main features:</div><ul style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px; margin: 15px 0px; padding: 0px 0px 0px 30px;"><li><div style="margin-bottom: 15px; margin-top: 15px;">Can be parameterized either via emoncms GUI (with current limitations of the interface) or through a configuration file. Useful for those who don't want to install a local emoncms just for the configuration of their gateway. This also allows to add features without the need for complex GUI edition.</div></li><li><div style="margin-bottom: 15px; margin-top: 15px;">Can read inputs from the RFM2Pi, but also inputs from the serial port of the form "NodeID val1 val2 ...", or even from a socket. This socket possibility means any application on the same machine or on the network can send data to the gateway. This even solves the inter-applications issue. It is better than writing to a file, in my opinion.</div></li><li><div style="margin-bottom: 15px; margin-top: 15px;">Extensibility. By design, it should be easy to create new inputs (data sources) or outputs (another server's API). It uses classes, so a new input (listener) or output (buffer) can be created through inheritance/overriding.</div></li></ul><div style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px; margin-bottom: 15px; margin-top: 15px;">See readme file for more explanations.</div><div style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px; margin-bottom: 15px; margin-top: 15px;">I should add a socket use sample, but it's pretty basic and require very few code. Here's a python example:</div><pre style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); color: #333333; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 13px; line-height: 19px; margin-bottom: 15px; margin-top: 15px; overflow: auto; padding: 6px 10px;"><code style="background-color: transparent; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: none; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; margin: 0px; padding: 0px;">import socket<br />HOST = 'raspberrypi'    # The remote host, can be 'localhost' just the same<br />PORT = 50011            # The port chosen in the gateway config<br />s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br />s.connect((HOST, PORT))<br />s.send('14 15 26\r\n')<br />s.close()&nbsp;</code></pre><span style="background-color: #fbfbfb; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 13px; line-height: 22px;">Currently, each buffer instantiated in the gateway buffers a given amount of data when network is down. This is limited (we don't want to eat up all memory). Next step could be to add the possibility to buffer samples in a file (with care for SD card wearout)."</span><br /><br />To try it out see the github repository here: <a href="https://github.com/Jerome-github/oem_gateway">https://github.com/Jerome-github/oem_gateway</a>. Jerome is looking for testers and would appreciate feedback on it.