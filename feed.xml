<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.3">Jekyll</generator><link href="https://blog.openenergymonitor.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.openenergymonitor.org/" rel="alternate" type="text/html" /><updated>2016-06-14T17:38:26+00:00</updated><id>https://blog.openenergymonitor.org/</id><title>Blog | OpenEnergyMonitor</title><subtitle>OpenEnergyMonitor Blog</subtitle><author><name>Glyn Hudson</name></author><entry><title>Part 2/3: Firmware Continuous Test &amp;amp; Build</title><link href="https://blog.openenergymonitor.org/2016/06/auto-build-continuous-test-firmware/" rel="alternate" type="text/html" title="Part 2/3: Firmware Continuous Test &amp; Build" /><published>2016-06-14T10:00:00+00:00</published><updated>2016-06-14T10:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/06/auto-build-continuous-test-firmware</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/06/auto-build-continuous-test-firmware/">&lt;p&gt;&lt;strong&gt;This post is part of a series&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/2016/06/platformio/&quot;&gt;1/3 PlatfomIO overview &amp;amp; compiling + uploading locally and on a Raspberry Pi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2/3: Continuous testing and auto release binary generation using PlatformIO &amp;amp; TravisCI&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;3/3: Continuous Deployment (OTA to ESP8266) &lt;em&gt;- Coming soon…&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Following on from the &lt;a href=&quot;https://blog.openenergymonitor.org/2016/06/platformio/&quot;&gt;last blog post&lt;/a&gt; on using &lt;a href=&quot;https://blog.openenergymonitor.org/2016/06/platformio/&quot;&gt;PlatformIO&lt;/a&gt; to compile and upload firmware locally, we’re now going to take things a step further and do the same but in &lt;em&gt;The Cloud&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Groan…I know I just used the clichéd ‘C’ word, however there are many advantages to compiling and testing the code in the cloud. At least I didn’t mention ‘IoT’…whoops, just doing my bit for SEO!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this instance when we say &lt;em&gt;‘compile in the cloud’&lt;/em&gt; I mean use GitHub, &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis IO&lt;/a&gt; and &lt;a href=&quot;https://platformio.org&quot;&gt;PlatfromIO&lt;/a&gt; to compile the firmware and if the branch is tagged with a ‘Git Release’ auto-generate a compiled binary and upload it back to GitHub release page.&lt;/p&gt;

&lt;p&gt;The motivation behind this automated-build and testing is working towards creating a robust infrastructure to push OTA updates to ESP8266 connected nodes (&lt;a href=&quot;https://github.com/openenergymonitor/EmonESP&quot;&gt;EmonESP dev&lt;/a&gt;) inspired by &lt;a href=&quot;http://blog.squix.org/2016/06/esp8266-continuous-delivery-pipeline-push-to-production.html&quot;&gt;this blog post&lt;/a&gt; by Daniel Eichhorn (&lt;a href=&quot;https://twitter.com/squix78&quot;&gt;@squix78&lt;/a&gt;).&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The advantages of &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_testing&quot;&gt;continuous testing&lt;/a&gt; have been long established in the software industry. The test we are performing is &lt;em&gt;‘does this firmware compile?’&lt;/em&gt;; obviously this is not a comprehensive test but it will at least give us confidence that there are no syntax errors etc. To actually test operation of embedded firmware, physical hardware (or simulation) would be required.&lt;/p&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;A commit or pull request is made to the firmware repository on GitHub
    &lt;ul&gt;
      &lt;li&gt;So far emonPi, emonTx and EmonESP repositories have been enabled for continuous build &amp;amp; test.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This triggers Travis CI to start a ‘build’&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Code compilation is generated using platformIO in the same way as when compiling locally, &lt;a href=&quot;https://blog.openenergymonitor.org/2016/06/platformio/&quot;&gt;See blog post&lt;/a&gt;. The &lt;a href=&quot;https://github.com/openenergymonitor/emonpi/blob/master/.travis.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; file in the repo&lt;/a&gt; configures the Travis CI build using platformIO:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;language: python
python:
- &#39;2.7&#39;
sudo: false
cache:
  directories:
  - &quot;~/.platformio&quot;
install:
- pip install -U platformio
script:
- platformio run -d firmware -e emonpi_deploy
deploy:
  on:
    repo: openenergymonitor/emonpi
    all_branches: true
    condition: $TRAVIS_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+$
  skip_cleanup: true
  provider: releases
  overwrite: true
  api_key:
    secure: OzNwxsQEVlSj2e4sOqKNYlNXqPqc5myL0nOBtY1FYD+sbxslHMixmlRASWuFMCjHdpFYQST2IuR3UMCPCjfPzMDVCVtsJ8VPd299fgDGzmEnL3P5Z8wCAv1CfHURcfXzFJDM7prevGx9cfz8uAiwIaNOhbTL7kL2GfSatV5PERzr2ytVh6WUj650Rd7bLKKhj8YHOzO9wOBoKDadYDFF99XYQbDDoHj9pAv+OPG76X0kWrdrq/0w26jh7JZaxrwhF/xD7maGaEjLOa/FcXbyZlVy/JIFjyrKp79swzVNSFNox/CbF7e6tzBf3NhZsoQyEchnCrgWw8IB7j/Ja7Ypetn6IG7C5rT/h46rWrZshbVdw7ZBUzhNJIUVLHFBy7hi2hxMw9Bn+oCt0UWLt8SnQnRfAbjw+z3XQ2/6MccUAINKGDqd4fm9M85sN6drpXySeJ/ZyRkdlUN0xsDpARI05mYLLlCutRzlSCkglbsKJr5XM7h7pXHLUQY5dfw9LrA788w25OBoO9U8vCKtoV8UCXWh6og/364CRl9Uih958f1t7kHIvfwLJjwSDFYVxUsyvSFyjfY+pIfuGEXtgIqMZ87nK3O1vAb9udbPErp0q5kJBeks9Df6wVsvjI7O++7YwiSuWlJBD0x45ZV9pxOFLnWb1hetHpPH5kFgBlTDqsY=
  file: &quot;firmware/.pioenvs/emonpi_deploy/firmware.hex&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;If the build fails for whatever reason (syntax error, library error etc) then the green &lt;code class=&quot;highlighter-rouge&quot;&gt;build passing&lt;/code&gt; icon changes to a ominous red &lt;code class=&quot;highlighter-rouge&quot;&gt;build Failed&lt;/code&gt; and we get an alert email. For a full build log example see the &lt;a href=&quot;https://travis-ci.org/openenergymonitor/emonpi&quot;&gt;emonPi Travis CI build page&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/openenergymonitor/emonpi&quot;&gt;&lt;img src=&quot;https://travis-ci.org/openenergymonitor/emonpi.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If the GitHub branch is tagged with a ‘release tag’ and compilation is successful then the generated &lt;code class=&quot;highlighter-rouge&quot;&gt;.hex&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.bin&lt;/code&gt; is uploaded to the GitHub release page:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/emonpi-draft-release.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/emonpi-travis-release.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For a detailed explanation of how the release binary is generated and deployed see Daniel Eichhorn’s (&lt;a href=&quot;https://twitter.com/squix78&quot;&gt;@squix78&lt;/a&gt;) &lt;a href=&quot;http://blog.squix.org/2016/06/esp8266-continuous-delivery-pipeline-push-to-production.html&quot;&gt;excellent blog post&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Stay tuned for part 3/3 of the PlatformIO firmware work-flow post series, which will cover auto deploying (OTA) the compiled firmware release onto an ESP8266. For a sneak peak checkout &lt;a href=&quot;http://blog.squix.org/2016/06/esp8266-continuous-delivery-pipeline-push-to-production.html&quot;&gt;this excellent blog post&lt;/a&gt; which was a source of inspiration and information.&lt;/p&gt;

&lt;hr /&gt;</content><author><name>Glyn Hudson</name></author><summary>This post is part of a series


  1/3 PlatfomIO overview &amp;amp; compiling + uploading locally and on a Raspberry Pi
  2/3: Continuous testing and auto release binary generation using PlatformIO &amp;amp; TravisCI
  3/3: Continuous Deployment (OTA to ESP8266) - Coming soon…




Following on from the last blog post on using PlatformIO to compile and upload firmware locally, we’re now going to take things a step further and do the same but in The Cloud!

Groan…I know I just used the clichéd ‘C’ word, however there are many advantages to compiling and testing the code in the cloud. At least I didn’t mention ‘IoT’…whoops, just doing my bit for SEO!

In this instance when we say ‘compile in the cloud’ I mean use GitHub, Travis IO and PlatfromIO to compile the firmware and if the branch is tagged with a ‘Git Release’ auto-generate a compiled binary and upload it back to GitHub release page.

The motivation behind this automated-build and testing is working towards creating a robust infrastructure to push OTA updates to ESP8266 connected nodes (EmonESP dev) inspired by this blog post by Daniel Eichhorn (@squix78).</summary></entry><entry><title>Part 1/3: PlatformIO open-source embedded development ecosystem</title><link href="https://blog.openenergymonitor.org/2016/06/platformio/" rel="alternate" type="text/html" title="Part 1/3: PlatformIO open-source embedded development ecosystem" /><published>2016-06-12T10:00:00+00:00</published><updated>2016-06-12T10:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/06/platformio</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/06/platformio/">&lt;p&gt;&lt;strong&gt;This post is part of a series:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;1/3: PlatfomIO overview &amp;amp; compiling + uploading locally and on a Raspberry Pi&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;2/3: Continuous testing and auto release binary generation using PlatformIO &amp;amp; TravisCI&lt;/li&gt;
  &lt;li&gt;3/3: Continuous Deployment (OTA to ESP8266)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Getting an Arduino based project (or other embedded platform) to compile and upload can be a pain. Making sure all the libraries are installed in the correct locations and are the correct versions can be tricky and time-consuming.&lt;/p&gt;

&lt;p&gt;I’m sure many developers will agree that the tools we use for embedded development are generally not as good as those used for web application development.&lt;/p&gt;

&lt;p&gt;The Arduino team have done a good job with their IDE to try and make the embedded development tool-chain setup as easy as possible. However, I still find library management a cause of frustration. Especially since I move between computers and OS’s frequently.&lt;/p&gt;

&lt;p&gt;Recently I have been using &lt;a href=&quot;http://platformio.org&quot;&gt;PlatformIO&lt;/a&gt; and am rather impressed with the ease of setup, speed of compilation, uploading (auto port detection), and most importantly an excellent &lt;a href=&quot;http://platformio.org/lib&quot;&gt;library manager&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PlatformIO is an open-source ecosystem for IoT development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cross-platform build system, IDE integration and continuous testing. Arduino, Espressif, ARM and mbed compatible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/pio-ide.png&quot; alt=&quot;PlatformIO IDE&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here are some things that have impressed me about PlatformIO (pio) after using it for a couple of weeks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/platformio&quot;&gt;&lt;strong&gt;Fully open-source&lt;/strong&gt;&lt;/a&gt; with active and friendly dev community.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easy to install&lt;/strong&gt; - Pure python based, installed using pip
    &lt;ul&gt;
      &lt;li&gt;Tool-chains are auto installed on first compile / upload e.g.
        &lt;ul&gt;
          &lt;li&gt;If trying to upload to Arduino avrdude will automatically be installed&lt;/li&gt;
          &lt;li&gt;If trying to compile an ESP8266 project the ESP toolchain will be installed&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Cross-platform (Linux, Windows and mac all work the same), this will make support much easier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Supports all the main embedded platforms&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;atmelavr (Arduino), espressif (ESP8266), ststm32 (ARM etc.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Command line and IDE&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;At work I use pio via Atom IDE on Ubuntu&lt;/li&gt;
      &lt;li&gt;At home, I use a Chromebook with Caret IDE and interact with pio via command-line&lt;/li&gt;
      &lt;li&gt;When developing directly on an emonPi / RaspberryPi pio command-line works great - &lt;em&gt;Yes, that’s right pio works on a RaspberryPi to compile and upload code directly!&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://platformio.org/lib&quot;&gt;&lt;strong&gt;Excellent library manager&lt;/strong&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Libraries can be searched and reviewed using command-line or web 2.0 manager&lt;/li&gt;
      &lt;li&gt;Required libraries can be specified in the &lt;code class=&quot;highlighter-rouge&quot;&gt;platformio.ini&lt;/code&gt; file and if not present install is prompted upon compilation&lt;/li&gt;
      &lt;li&gt;Specific library version (as defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;library.json&lt;/code&gt; &lt;a href=&quot;https://github.com/openenergymonitor/EmonLib/blob/master/library.json&quot;&gt;(emonLib example)&lt;/a&gt;) or git commit SHA&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fast compilation &amp;amp; pain-free uploading&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;PlatformIO’s compiler is the &lt;a href=&quot;https://twitter.com/krzychb2/status/729294573760065536&quot;&gt;fastest in the business&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;USB / Serial ports auto detected&lt;/li&gt;
      &lt;li&gt;Since the emonPi has been added as a custom board PlatformIO can even upload direct to emonPi via RaspberryPi GPIO and trigger GPIO AVR reset, not more &lt;a href=&quot;https://github.com/openenergymonitor/avrdude-rpi&quot;&gt;hacked avrdude&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easy integration with continuous testing &amp;amp; deployment&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Integration with TravisCI to enable compilation, code testing and binary (.hex / .bin) release generation in the cloud.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://github.com/openenergymonitor/emonpi/&quot;&gt;emonPi&lt;/a&gt; and &lt;a href=&quot;github.com/openenergymonitor/emonTxFirmware&quot;&gt;emonTx&lt;/a&gt; git repos are now enabled for continous-testing and auto binary generation on release tag…this is a step change in embedded development.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;example-compiling-emontx--emonpi-firmware&quot;&gt;Example: Compiling emonTx / emonPi firmware&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.platformio.org/en/latest/quickstart.html&quot;&gt;PlatformIO has some excellent quick start docs&lt;/a&gt; to cover setting up your first ‘blinky’ project, therefore I will not duplicate here. In this example I focus on setting up pio and compiling emonTx / emonPi firmware. This example assumes a totally bare metal machine with nothing installed except python (2.7 recommended). Pio works great on a Raspberry Pi.&lt;/p&gt;

&lt;p&gt;This guide used command-line steps on Linux, if using Windows or if you want to use the platformio IDE see &lt;a href=&quot;http://platformio.org/get-started&quot;&gt;PlatformIO Getting Started Page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The PlatformIO IDE or Atom IDE is excellent and very easy to use (self explanatory). This guide uses pio via command line as this gives a more hands-on experience to how pio is working.&lt;/p&gt;

&lt;h3 id=&quot;install-platformio&quot;&gt;1. Install PlatformIO&lt;/h3&gt;

&lt;p&gt;The easiest way if running Linux is to use the install script, this installs pio via python pip and installs pip if not present. See &lt;a href=&quot;http://docs.platformio.org/en/latest/installation.html#installer-script&quot;&gt;PlatformIO installation docs&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ sudo python -c &quot;$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/master/scripts/get-platformio.py)&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;clone-emontx--emonpi-repo&quot;&gt;2. Clone emonTx / emonPi repo&lt;/h3&gt;

&lt;p&gt;We’ll use the emonTx (V3 discrete sampling) as an example here but the steps are exactly the same for emonPi.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;emonTx V3&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/openenergymonitor/emonTxFirmware`
$ cd emonTxFirmware/emonTxV3/RFM/emonTxV3.4/emonTxV3_4_DiscreteSampling
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;emonPi&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/openenergymonitor/emonpi`
cd emonpi/firmware
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;compile-with-platformio&quot;&gt;3. Compile with PlatformIO&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ platformio run&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or shorthand for the lazy&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ pio run&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That’s it!&lt;/strong&gt; That’s all that’s needed to setup pio from scratch and compile emonTx firmware :-D&lt;/p&gt;

&lt;p&gt;The first time platformIO is run it will ask to install the required libraries  and avr toolchain. The required libraries are defined in &lt;a href=&quot;https://github.com/openenergymonitor/emonTxFirmware/blob/master/emonTxV3/RFM/emonTxV3.4/emonTxV3_4_DiscreteSampling/platformio.ini&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;platformio.ini&lt;/code&gt; in the emonTx discrete sampling firmware folder&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;e.g.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lib_install = 19,54,116,252&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;These numbers reference the Arduino libraries in the &lt;a href=&quot;http://platformio.org/lib&quot;&gt;pio library manager&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;19: DHT22&lt;/li&gt;
  &lt;li&gt;54: Dallas Temperature&lt;/li&gt;
  &lt;li&gt;116: emonLib&lt;/li&gt;
  &lt;li&gt;252: JeeLib&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The latest version of the libraries are automatically cloned from their native git repos into the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/platformio&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;If required specific versions can be installed e.g.:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pio lib install 252 --version=&quot;e70c9d9f4e&quot;
$ platformio lib install 54 --version=&quot;3.7.7&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;upload-using-platformio&quot;&gt;3. Upload using PlatformIO&lt;/h3&gt;

&lt;h4 id=&quot;a-via-usb-to-uart-programmer-to-emontx&quot;&gt;3a. Via USB to UART programmer to emonTx&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ sudo platformio run --target upload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or lazy shorthand&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ sudo pio run -t upload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pio will attempt to auto detect the USB programmer and upload :-)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: you will need &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; unless you have correctly &lt;a href=&quot;https://github.com/platformio/platformio/blob/develop/scripts/99-platformio-udev.rules&quot;&gt;configured udev rules&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To list available serial ports:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ pio serialports list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There is even a built in serial monitor&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ pio serialports monitor&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;b-using-ttyama0-gpio-to-upload-direct-to-emonpi&quot;&gt;3b. Using ttyAMA0 GPIO to upload direct to emonPi&lt;/h3&gt;

&lt;p&gt;This is where things get very exciting, pio can compile the code directly on a Raspberry Pi. The latest version of pio (&lt;del&gt;due to be released in the next few weeks&lt;/del&gt;, &lt;a href=&quot;https://community.platformio.org/t/platformio-cli-2-10-0/381&quot;&gt;released 2.10.0&lt;/a&gt;) will have built in support for the emonPi auto-reset on upload using GPIO4&lt;/p&gt;

&lt;p&gt;The emonPi board is defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;platformio.ini&lt;/code&gt; in the &lt;a href=&quot;https://github.com/openenergymonitor/emonpi/blob/master/firmware/platformio.ini&quot;&gt;emonpi/firmware folder&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;board = emonpi
upload_port = /dev/ttyAMA0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All that is needed to compile and upload directly on the emonPi is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/emonpi/firmware
$ sudo service emonhub stop
$ sudo pio run -t upload
$ sudo service emonhub start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Thanks a lot to &lt;a href=&quot;https://github.com/ivankravets&quot;&gt;Ivan Kravets&lt;/a&gt; for helping integrate emonPi into the PlatfomIO ecosystem. &lt;a href=&quot;https://github.com/platformio/platformio/commit/c5b5e80de4928cf91be59e675429b520e31d873a&quot;&gt;View commit changes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Stay tuned for part 2/3 of the PlatformIO post series which will cover setting up firmware continuous testing using Travis CI and auto compiled binary generation on release tag directly on github. This is currently live on the emonPi &amp;amp; emonTx repos if you want a sneak preview. See &lt;a href=&quot;https://github.com/openenergymonitor/emonpi/blob/master/.travis.yml&quot;&gt;travis.yaml&lt;/a&gt; file and Travis build status icon on the main emonpi repo &lt;a href=&quot;https://github.com/openenergymonitor/emonpi/blob/master/README.md&quot;&gt;Readme.md&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;</content><author><name>Glyn Hudson</name></author><summary>This post is part of a series:


  1/3: PlatfomIO overview &amp;amp; compiling + uploading locally and on a Raspberry Pi
  2/3: Continuous testing and auto release binary generation using PlatformIO &amp;amp; TravisCI
  3/3: Continuous Deployment (OTA to ESP8266)




Getting an Arduino based project (or other embedded platform) to compile and upload can be a pain. Making sure all the libraries are installed in the correct locations and are the correct versions can be tricky and time-consuming.

I’m sure many developers will agree that the tools we use for embedded development are generally not as good as those used for web application development.

The Arduino team have done a good job with their IDE to try and make the embedded development tool-chain setup as easy as possible. However, I still find library management a cause of frustration. Especially since I move between computers and OS’s frequently.

Recently I have been using PlatformIO and am rather impressed with the ease of setup, speed of compilation, uploading (auto port detection), and most importantly an excellent library manager.


  PlatformIO is an open-source ecosystem for IoT development.



  Cross-platform build system, IDE integration and continuous testing. Arduino, Espressif, ARM and mbed compatible.</summary></entry><entry><title>Electrical Supply Line Vault</title><link href="https://blog.openenergymonitor.org/2016/06/emonpi-vrms-line-fault/" rel="alternate" type="text/html" title="Electrical Supply Line Vault" /><published>2016-06-03T10:00:00+00:00</published><updated>2016-06-03T10:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/06/emonpi-vrms-line-fault</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/06/emonpi-vrms-line-fault/">&lt;p&gt;Last week my home emonPi energy monitor came in handy to help diagnose an electrical supply fault.&lt;/p&gt;

&lt;p&gt;A neighbour alerted me that her lights were flickering and internet router was dropping offline. At the time I was doing some DIY and had noticed the power drill I was using change speed erratically. I had presumed it was my drill about the give up the ghost.&lt;/p&gt;

&lt;p&gt;I checked the Emoncms graph on my emonPi energy monitor and noticed that VRMS was well out of spec at about 150V (we usually get 230V*) and occasionally jumping up to almost 300V! The electrical company was alerted and the fault was traced back to a frayed conductor on our street. I helped the electrical contractors view the real-time VRMS value to confirm the fault was fixed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/vrms.png&quot; alt=&quot;VRMS Fault&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;notes-on-mains-voltage-limits&quot;&gt;* Notes on Mains Voltage Limits&lt;/h2&gt;

&lt;p&gt;The standard domestic mains supply for Europe is 230 V ± 10%, giving a lower limit of 207 V and an upper limit of 253 V. It is permissible under BS 7671 to have a voltage drop within the installation of 5%, which would give a lower limit of 195.5 V.
The UK standard prior to harmonization was 240 V ± 6%, giving an upper limit of 254.4 V.&lt;/p&gt;

&lt;p&gt;Although the UK nominal standard is now 230 V, the supply system has not generally been adjusted, and the voltage centers around 240 V.&lt;/p&gt;

&lt;p&gt;Thanks to Robert Wall for summarizing the rather convoluted standards surrounding UK grid voltages.&lt;/p&gt;

&lt;p&gt;All of Europe, Africa, Asia, Australia, New Zealand and most of South America, use a supply that is within 6% of 230 V&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mains_electricity_by_country&quot;&gt;Mains Electricity by Country (Wikipedia)&lt;/a&gt;&lt;/p&gt;</content><author><name>Glyn Hudson</name></author><summary>Last week my home emonPi energy monitor came in handy to help diagnose an electrical supply fault.

A neighbour alerted me that her lights were flickering and internet router was dropping offline. At the time I was doing some DIY and had noticed the power drill I was using change speed erratically. I had presumed it was my drill about the give up the ghost.

I checked the Emoncms graph on my emonPi energy monitor and noticed that VRMS was well out of spec at about 150V (we usually get 230V*) and occasionally jumping up to almost 300V! The electrical company was alerted and the fault was traced back to a frayed conductor on our street. I helped the electrical contractors view the real-time VRMS value to confirm the fault was fixed.</summary></entry><entry><title>Substantial update to emonPi</title><link href="https://blog.openenergymonitor.org/2016/05/emonsd-update-03may16/" rel="alternate" type="text/html" title="Substantial update to emonPi" /><published>2016-05-20T10:00:00+00:00</published><updated>2016-05-20T10:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/05/emonsd-update-03may16</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/05/emonsd-update-03may16/">&lt;p&gt;This latest update to emonSD the pre-built SD card image for the emonPi/emonBase significantly enhances the out-the-box functionality of the emonPi by integrating applications such as nodeRED, openHAB and improved MQTT support.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The emonPi in its default configuration works great using Emoncms for data logging and visualisation. However there may be times when more flexibility and the ability to interface with other hardware or services is desirable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The emonPi with this latest software update is perfectly positioned to become the heart of a smart home automation system. The ‘always-on’ requirement of energy monitoring and the processing power of the Raspberry Pi makes it a fantastic customisable home-hub. See &lt;em&gt;Related Blog Posts&lt;/em&gt; at the bottom of this post for inspiration as to what can be achieved.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For the past few years we have made available a pre-built SD card image for the RaspberryPi. Since launching the emonPi last year the pre-built image has been developed extensively. We have now given it a name: &lt;strong&gt;emonSD&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The latest update to emonSD (&lt;strong&gt;&lt;a href=&quot;https://github.com/openenergymonitor/emonpi/wiki/emonSD-pre-built-SD-card-Download-&amp;amp;-Change-Log#emonsd-03may16--release&quot;&gt;emonSD-03May16&lt;/a&gt;&lt;/strong&gt;) now incudes the following all setup and pre-configured:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/emoncms/emoncms&quot;&gt;Emoncms V9&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/integrations/nodered&quot;&gt;nodeRED&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/integrations/openhab&quot;&gt;openHAB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/technical/mqtt&quot;&gt;MQTT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/integrations/lightwaverf/&quot;&gt;Support for MQTT LightWaveRF OOK Control&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/integrations/mqtt-relay/&quot;&gt;Support for MQTT WiFi control Relay&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/setup/connect/#5-connect-via-3g-gsm-optional&quot;&gt;GSM 3G USB modem support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.org/downloads/raspbian/&quot;&gt;RASPBIAN JESSIE LITE&lt;/a&gt; (2015-11-21)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2016/03/raspberry-pi-3/&quot;&gt;Raspberry Pi 3 Suppport&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Including on-board Wifi, external USB Wifi adapter no longer required&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;low-write optimisations for long SD card life-span&lt;/li&gt;
  &lt;li&gt;Root file-system read-only&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;download-latest-emonsd--view-full-change-loghttpsgithubcomopenenergymonitoremonpiwikiemonsd-pre-built-sd-card-download--change-logemonsd-03may16--release&quot;&gt;&lt;a href=&quot;https://github.com/openenergymonitor/emonpi/wiki/emonSD-pre-built-SD-card-Download-&amp;amp;-Change-Log#emonsd-03may16--release&quot;&gt;Download latest emonSD &amp;amp; view full change-log&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;All emonPi / emonBase’s that have been purchased from our online store from June 2015 - May 2016 have been shipped with the old &lt;a href=&quot;https://github.com/openenergymonitor/emonpi/wiki/emonSD-pre-built-SD-card-Download-&amp;amp;-Change-Log#emonsd-17jun15&quot;&gt;17June15&lt;/a&gt; emonSD. The new emonSD 03May16 will now be included by default (&lt;a href=&quot;/2016/05/emonpi-raspberrypi3/&quot;&gt;together with a Raspberry Pi 3&lt;/a&gt;) with all emonPi / emonBase purchases. If you have recently puchased an emonPi and it like the photo (black acrylic fascia) then you have the new emonSD and Raspberry Pi 3inside. The acrylic fascia is required to use the Raspberry Pi 3’s on-board WiFi (&lt;a href=&quot;/2016/05/emonpi-raspberrypi3/&quot;&gt;see blog post&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/emonpi-raspi3.jpg&quot; alt=&quot;emonPi Raspberry Pi 3 Acrylic Fascia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Existing users can download the new emonSD from the link above and flash to a spare SD card and then use the &lt;a href=&quot;https://guide.openenergymonitor.org/setup/import/&quot;&gt;Emoncms backup / import&lt;/a&gt; tool to migrate local Emoncms data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We would highly recommend all users that are interested in having the latest features and future update to update to this new emonSD image. The June15 image will not receive any Emoncms updates.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;However if your emonPi is currently stable and is working as indented then don’t feel that upgrading is essential, &lt;em&gt;“If it ain’t broke, don’t f ix it!”&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;thank-you-feedback--support&quot;&gt;Thank you, Feedback &amp;amp; Support&lt;/h2&gt;

&lt;p&gt;Releasing this pre-built image update is a significant milestone for us. It’s been the main focus of my work since November lasat year. Thanks a lot to all the community members who helped with testing the dev and release candidates version of the image and provided excellent feedback and contributions. See the &lt;a href=&quot;https://github.com/openenergymonitor/emonpi/wiki/emonSD-pre-built-SD-card-Download-&amp;amp;-Change-Log&quot;&gt;emonSD download repository wiki&lt;/a&gt; for links to forum discussion thread.&lt;/p&gt;

&lt;p&gt;To give feedback or obtain support for the new image please post in the &lt;a href=&quot;https://community.openenergymonitor.org/c/emonsd&quot;&gt;emonSD forum&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt;As &lt;a href=&quot;2016/05/website-changes/&quot;&gt;previously mentioned on the blog&lt;/a&gt; a couple of weeks ago we have launched a new User Guide website, the launch of this Guide has coincide with the launch of the new emonSD. The User Guide is designed to be the goto location for everything a user needs to know to setup, use and configure an OpenEnergyMonitor system:&lt;/p&gt;

&lt;h3 id=&quot;httpsguideopenenergymonitororghttpsguideopenenergymonitororg&quot;&gt;&lt;a href=&quot;https://guide.openenergymonitor.org&quot;&gt;https://guide.openenergymonitor.org&lt;/a&gt;&lt;/h3&gt;

&lt;h2 id=&quot;related-blog-posts&quot;&gt;Related Blog posts&lt;/h2&gt;

&lt;h3 id=&quot;nodered&quot;&gt;nodeRED&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/categories/nodered/&quot;&gt;Node-RED blog post tag&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/2015/10/emonpi-nodered-and-mqtt/&quot;&gt;emonPi, NodeRed and MQTT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-wVqIG0KV_8k/VkPM0XAJCYI/AAAAAAABi1c/EoNQ2OvDVvs/s1600/emoncms_nodered_node.png&quot;&gt;Node-RED Emoncms Node&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/2016/02/outdoor-temperature-data-from-weather/&quot;&gt;Outdoor Temperature Data from Weather Underground to Emoncms &amp;amp; MQTT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/2015/11/ambient-wind-energy-indicator-using/&quot;&gt;Ambient Wind Energy Indicator using Node-RED and Blink(1) USB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;openhab&quot;&gt;openHAB&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/2015/12/openenergymonitor-emonpi-and-openhab/&quot;&gt;OpenEnergyMonitor, emonPi and openHAB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lightwave-rf&quot;&gt;LightWave RF&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.openenergymonitor.org/2015/11/remote-control-of-lightwave-rf-plugs/&quot;&gt;Controling LightWaveRF plugs using emonPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Glyn Hudson</name></author><summary>This latest update to emonSD the pre-built SD card image for the emonPi/emonBase significantly enhances the out-the-box functionality of the emonPi by integrating applications such as nodeRED, openHAB and improved MQTT support.


  The emonPi in its default configuration works great using Emoncms for data logging and visualisation. However there may be times when more flexibility and the ability to interface with other hardware or services is desirable.


The emonPi with this latest software update is perfectly positioned to become the heart of a smart home automation system. The ‘always-on’ requirement of energy monitoring and the processing power of the Raspberry Pi makes it a fantastic customisable home-hub. See Related Blog Posts at the bottom of this post for inspiration as to what can be achieved.



For the past few years we have made available a pre-built SD card image for the RaspberryPi. Since launching the emonPi last year the pre-built image has been developed extensively. We have now given it a name: emonSD.

The latest update to emonSD (emonSD-03May16) now incudes the following all setup and pre-configured:


  Emoncms V9
  nodeRED
  openHAB
  MQTT
  Support for MQTT LightWaveRF OOK Control
  Support for MQTT WiFi control Relay
  GSM 3G USB modem support</summary></entry><entry><title>emonPi / emonBase Raspberry Pi 3</title><link href="https://blog.openenergymonitor.org/2016/05/emonpi-raspberrypi3/" rel="alternate" type="text/html" title="emonPi / emonBase Raspberry Pi 3" /><published>2016-05-13T15:00:00+00:00</published><updated>2016-05-13T15:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/05/emonpi-raspberrypi3</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/05/emonpi-raspberrypi3/">&lt;p&gt;All emonPi’s / emonBase’s shipped to date have included a Raspberry Pi 2. In the next week or so we will be upgrading to include a RaspberryPi 3. This is a nice upgrade: approximately double the processor speed and on-board WiFi with zero cost increase.&lt;/p&gt;

&lt;p&gt;Since the RaspberryPi 3 has got on-board WiFi a USB WiFi dongle is not required; even more costing cost saving for our customers, thanks to hard work of the Raspberry Pi foundation and a bit of &lt;a href=&quot;https://en.wikipedia.org/wiki/Moore%27s_law&quot;&gt;Moore’s law&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/emonpi-raspi3.jpg&quot; alt=&quot;emonPi Raspberry Pi 3 Acrylic Fascia&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;If you receive an emonPi with a black acrylic fascia like in the photo above this means you have a RaspberryPi 3 inside. The reason for switching from punched-aluminium end-plates to black acrylic plastic is to allow the RaspberryPi 3’s on-board Wifi to propagate out of the enclosure.&lt;/p&gt;

&lt;p&gt;The Raspberry Pi 3 equipped emonPi’s and emonBase’s will be running the latest &lt;a href=&quot;https://guide.openenergymonitor.org/technical/#software-overview&quot;&gt;emonSD pre-built SD card image&lt;/a&gt; which includes the latest version of Emoncms as well as &lt;a href=&quot;https://guide.openenergymonitor.org/integrations/nodered&quot;&gt;NodeRED&lt;/a&gt; and &lt;a href=&quot;https://guide.openenergymonitor.org/integrations/openhab&quot;&gt;openHAB&lt;/a&gt; pre-installed. Checkout our &lt;a href=&quot;https://guide.openenergymonitor.org/&quot;&gt;new Setup &amp;amp; User Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The Raspberry Pi 3 also includes integrated on-board Bluetooth, however this has been disabled on the emonPi due to a serial port conflict. See our &lt;a href=&quot;/2016/03/raspberry-pi-3/&quot;&gt;original post on the Raspberry Pi 3&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;emonpi-online-store-itemhttpsshopopenenergymonitorcomemonpi-3&quot;&gt;&lt;a href=&quot;https://shop.openenergymonitor.com/emonpi-3/&quot;&gt;emonPi Online Store Item&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;emonbase-online-store-itemhttpsshopopenenergymonitorcomemonbase-web-connected-base-station&quot;&gt;&lt;a href=&quot;https://shop.openenergymonitor.com/emonbase-web-connected-base-station/&quot;&gt;emonBase Online Store Item&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;getting-start-guide-httpsguideopenenergymonitororg&quot;&gt;&lt;a href=&quot;https://guide.openenergymonitor.org/&quot;&gt;Getting Start Guide &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberrypi3.jpg&quot; alt=&quot;Raspberry Pi 3&quot; /&gt;&lt;/p&gt;</content><author><name>Glyn Hudson</name></author><summary>All emonPi’s / emonBase’s shipped to date have included a Raspberry Pi 2. In the next week or so we will be upgrading to include a RaspberryPi 3. This is a nice upgrade: approximately double the processor speed and on-board WiFi with zero cost increase.

Since the RaspberryPi 3 has got on-board WiFi a USB WiFi dongle is not required; even more costing cost saving for our customers, thanks to hard work of the Raspberry Pi foundation and a bit of Moore’s law.</summary></entry><entry><title>Emoncms android App QR Code Scanner Setup</title><link href="https://blog.openenergymonitor.org/2016/05/emoncms-qr/" rel="alternate" type="text/html" title="Emoncms android App QR Code Scanner Setup" /><published>2016-05-11T15:00:00+00:00</published><updated>2016-05-11T15:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/05/emoncms-qr</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/05/emoncms-qr/">&lt;p&gt;I would like to highlight a nice improvement to Emoncms and the Emoncms android app that has been contributed by community memebers &lt;a href=&quot;https://community.openenergymonitor.org/users/jumpmaster/activity&quot;&gt;@jumpmaster&lt;/a&gt; and &lt;a href=&quot;https://community.openenergymonitor.org/users/andy_taylor/activity&quot;&gt;@andy_taylor&lt;/a&gt;. See &lt;a href=&quot;https://community.openenergymonitor.org/t/mobile-app-qr-code/149&quot;&gt;development forum thread&lt;/a&gt; on our &lt;a href=&quot;/2016/05/website-changes/&quot;&gt;shiny new forums&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Emoncms MyAccount page now displays a QR code and a couple of handy ‘Copy to Clipboard’ buttons for the API keys:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/emoncms-qr.png&quot; alt=&quot;Emoncms QR code generator&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;em&gt;This updated has been merged into the stable Emoncms branch V9.6. If your running an emonPi/emonBase jsut hit update to pull in the changes. The update will appear on Emoncms.org in the next few days.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This QR code contains the Emoncms URL and read-API key to automate setting up the &lt;a href=&quot;https://play.google.com/store/apps/details?id=org.emoncms.myapps&amp;amp;hl=en_GB&quot;&gt;Emoncms android app&lt;/a&gt;. The update for the app to support the QR code scanner has been pushed to Googe Play. After the update just can the QR code to setup the app.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/android-qr.png&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If your feeds are named &lt;strong&gt;use&lt;/strong&gt; and &lt;strong&gt;use_kwh&lt;/strong&gt; the app will automatically select use these feeds as the Power and kWh feeds.&lt;/p&gt;

&lt;p&gt;Any issues, please post on the &lt;a href=&quot;https://community.openenergymonitor.org/t/mobile-app-qr-code/149&quot;&gt;development forum thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks again to everyone involved in the development and testing. It’s been great working with an enthusiastic development community over on the new forums. Onwards and upwards :-)&lt;/p&gt;</content><author><name>Glyn Hudson</name></author><summary>I would like to highlight a nice improvement to Emoncms and the Emoncms android app that has been contributed by community memebers @jumpmaster and @andy_taylor. See development forum thread on our shiny new forums.

Emoncms MyAccount page now displays a QR code and a couple of handy ‘Copy to Clipboard’ buttons for the API keys:</summary></entry><entry><title>New Forum, Blog and User Guide Website</title><link href="https://blog.openenergymonitor.org/2016/05/website-changes/" rel="alternate" type="text/html" title="New Forum, Blog and User Guide Website" /><published>2016-05-03T15:00:00+00:00</published><updated>2016-05-03T15:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/05/website-changes</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/05/website-changes/">&lt;p&gt;We have been busy for the past couple of months building some new websites to improve OpenEnergyMonitor.&lt;/p&gt;

&lt;p&gt;Introducing a shiny new:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Community Forum&lt;/li&gt;
  &lt;li&gt;User Guide website&lt;/li&gt;
  &lt;li&gt;Blog&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Later this week on Thursday 5th May 2016 the old forums will be frozen and we will be moving to the new community forums&lt;/strong&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;new-community-forum&quot;&gt;1. New Community Forum&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/Selection_037.png&quot; alt=&quot;image&quot; /&gt;&lt;img src=&quot;/images/Selection_038.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;httpscommunityopenenergymonitororghttpscommunityopenenergymonitororg&quot;&gt;&lt;a href=&quot;https://community.openenergymonitor.org&quot;&gt;https://community.openenergymonitor.org&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;The current &lt;a href=&quot;http://openenergymonitor.org/emon/forum&quot;&gt;OpenEnergyMonitor Forums&lt;/a&gt; have been running (since 2010) on Drupal 6. As of February 2016 Drupal 6 reached EOL. This does not mean that the site will stop working, however, it does mean we have decided the time has come to upgrade the highest traffic and most interacted-with part of the site &amp;gt; The Community Forums.&lt;/p&gt;

&lt;p&gt;Later this week &lt;strong&gt;on Thursday 5th May 2016 the old forum will be frozen&lt;/strong&gt; and we will be moving to the new forum powered by &lt;a href=&quot;https://www.discourse.org/&quot;&gt;Discourse&lt;/a&gt; open-source forum platform hosted and managed us (OpenEnergyMonitor) on our servers.&lt;/p&gt;

&lt;p&gt;You will need to create an account on the new forum. You should receive an email soon inviting you to the new forum, if you join via the link in the email you will receive elevated privileges on the new forum since you have already proved yourself as a trusted user.&lt;/p&gt;

&lt;p&gt;Thanks a lot to the team of community volunteers who have prepare the new forum over the past few weeks.&lt;/p&gt;

&lt;h2 id=&quot;new-user-guide&quot;&gt;2. New User Guide&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/Selection_036.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;httpsguideopenenergymonitororghttpsguideopenenergymonitororg&quot;&gt;&lt;a href=&quot;https://guide.openenergymonitor.org&quot;&gt;https://guide.openenergymonitor.org&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://openenergymonitor.org/emon/&quot;&gt;OpenEnergyMonitor.org&lt;/a&gt; contains has a wealth of information (specifically the &lt;a href=&quot;http://openenergymonitor.org/emon/buildingblocks&quot;&gt;Building Blocks&lt;/a&gt; resources section), however a common issue raised by new users is they feel lost swimming in a sea of information. The user guide has been created to provide just the right amount of information to setup and configure and OpenEnergyMonitor system. The guide is focused on the emonPi but will also cover emonBase (Raspberry Pi + RFM69Pi), emonTx and emonTH.&lt;/p&gt;

&lt;p&gt;The launch of the Guide site coincides with the launch of the new emonSD Raspberry Pi emonPi / emonBase pre built image which includes the latest version of Emoncms as well as MQTT, nodeRED, openHAB and Raspberry Pi 3 support all setup and pre-configured. &lt;a href=&quot;https://community.openenergymonitor.org/t/emonsd-03may16-release/145&quot;&gt;See forum post&lt;/a&gt;. This new emonSD image will be installed as standard with all emonPi/emonBase’s shipped from our store in the next few weeks. &lt;em&gt;We soon be selling the Raspberry Pi 3 as standard with emonPi / emonBase, another blog post on this coming soon..&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The User Guide site will attempt to create a distinction between ‘user’ documentation and ‘developer’ documentation and discussions. The Guide site has been designed to look and work great on mobile devices. We think this is important since stats indicated that users often follow the setup guide on a mobile or tablet while at the install site (think head stuck inside a meter cabinet!). Going forward we would like to standardise on the following locations for documentation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User Guide Site - User documentation&lt;/li&gt;
  &lt;li&gt;Forums - User support / Developer discussion separated with categories.&lt;/li&gt;
  &lt;li&gt;GitHub - Technical documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Hardware Wiki will still exist, however expect hardware documentation to move to &lt;a href=&quot;https://github.com/openenergymonitor/hardware&quot;&gt;GitHub Hardware Repo&lt;/a&gt; over time.&lt;/p&gt;

&lt;h2 id=&quot;new-blog&quot;&gt;3. New Blog&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/Selection_039.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;httpsblogopenenergymonitororghttpsblogopenenergymonitororg&quot;&gt;&lt;a href=&quot;https://blog.openenergymonitor.org&quot;&gt;https://blog.openenergymonitor.org&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;We have wanted to move away from our &lt;a href=&quot;http://openenergymonitor.blogspot.co.uk/&quot;&gt;old Google blogger&lt;/a&gt; for a while. During the learning process building the Guide website I realised that using GitHub and Jekyll would also be a good solution for the blog. Thanks to Google export and a nice &lt;a href=&quot;https://import.jekyllrb.com/docs/blogger/&quot;&gt;Jekyll import script&lt;/a&gt; we managed to migrate over the blog without too much difficulty. Please update your RSS subscription to the &lt;a href=&quot;http://blog.openenergymonitor.org/feed.xml&quot;&gt;new Atom feed.xml&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;technical-info&quot;&gt;Technical info&lt;/h3&gt;

&lt;p&gt;The new Guide and Blog are built using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; static site generator with Octopress &lt;a href=&quot;https://github.com/coogie/oscailte&quot;&gt;Oscailte theme&lt;/a&gt; to convert markdown files to html. The sites are &lt;a href=&quot;https://github.com/openenergymonitor/guide&quot;&gt;fully open-source on GitHub &lt;/a&gt; and are hosted by GitHub pages. &lt;a href=&quot;https://travis-ci.org/openenergymonitor/guide/&quot;&gt;Travis CI&lt;/a&gt; has been configured to re-build the static html pages each time a change commit is made. Hosting the site on github will make it easy for anyone to propose a change/fix. The site is served and secured via Cloud Flare using CF’s &lt;a href=&quot;https://blog.cloudflare.com/cloudflare-ca-encryption-origin/&quot;&gt;Universal SSL/TLS to origin&lt;/a&gt;.&lt;/p&gt;</content><author><name>Glyn Hudson</name></author><summary>We have been busy for the past couple of months building some new websites to improve OpenEnergyMonitor.

Introducing a shiny new:


  Community Forum
  User Guide website
  Blog


Later this week on Thursday 5th May 2016 the old forums will be frozen and we will be moving to the new community forums</summary></entry><entry><title>Part 3: Aggregated supply and demand across multiple households</title><link href="https://blog.openenergymonitor.org/2016/05/Part3-Aggregated-supply-and-demand/" rel="alternate" type="text/html" title="Part 3: Aggregated supply and demand across multiple households" /><published>2016-05-02T15:00:00+00:00</published><updated>2016-05-02T15:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/05/Part3-Aggregated-supply-and-demand</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/05/Part3-Aggregated-supply-and-demand/">&lt;p&gt;One of the main problems with looking at demand at the single household level is that demand at this level is very spiky, there are often long periods of low use around 100W and then suddenly a kettle or electric car charger turns on and demand increases by 20-30x in an instant. Solar generation can be very spiky too and so there is room for matching but it can be difficult to get the timing right.&lt;/p&gt;

&lt;p&gt;One solution to increasing supply &amp;amp; demand matching at the household level is to have in home battery storage and diversion to hot water stores – but it may not be the best solution for all cases.&lt;/p&gt;

&lt;p&gt;Aggregating supply and demand across households provides an example of how the degree of matching can be increased significantly by what could be described as sequential demand. Not everyone boils a kettle at the same time or a cloud passing over one households solar pv system may not be passing over another’s.&lt;/p&gt;

&lt;p&gt;In order to explore the extent of increased matching possible through aggregation of supply and demand I have been working with Dominic McCann from Carbon Coop on what could be called a &lt;a href=&quot;https://openenergymonitor.org/dev/smartgrid&quot;&gt;&lt;strong&gt;‘virtual microgrid’ concept&lt;/strong&gt;&lt;/a&gt;, we have a provisional front page for this here - please note that its still in early development:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/smart-grid.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;With only four households aggregating on-site solar, off-site wind, hydro and consumption and with total supply matching total demand over the whole period achieved by scaling the wind component, we can see matching increasing from 46% in the previous example to around 64% here. The resulting average carbon intensity is 132gCO2/kWh.&lt;/p&gt;

&lt;p&gt;At this carbon intensity a heatpump (@ COP 3.0) has a delivered heat carbon intensity of 44gCO2/kWh, 81% less than gas and an EV (@ 3.7 miles/kWh) has a carbon intensity of 22gCO2/km 80% less than a very efficient petrol car doing 60 real world mpg, this compares with a carbon saving of roughly 45% vs direct gas heating and a petrol car if the electricity supply was from a grid supply consisting of gas, coal and nuclear at present UK proportions. Its a bit more complicated than this as more of the co2 was emitted when the EV was charging than at other times, the overall carbon intensity is just an average, Il come back to a more in-depth analysis of this again.&lt;/p&gt;

&lt;p&gt;The result goes some way to illustrating why a mixture of renewable generation sources and aggregated demand ultimately increases the usefulness of the renewable supply and reflects the kind of results we see from running hourly zero carbon energy system models such as the one developed by the Center for Alternative Technology. These indicate that matching levels of between 62% and 78% are possible before storage and significant demand shifting with normal electric demand, heatpump heating demand and EV charging demand. See &lt;a href=&quot;(https://openenergymonitor.org/energymodel/)&quot;&gt;modelled supply/demand matching&lt;/a&gt; based on ZeroCarbonBritain data:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://openenergymonitor.org/dev/smartgrid&quot;&gt;Smart grid test intro page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visible currently on the community smart grid test front page is the participating households renewable supply mix, real-time information on grid CO2 intensity and grid wind, solar and hydro. Household demand is not currently shown as there are not enough participants for the demand profile to be sufficiently anonymous.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/supply.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the top of the page is a UK grid status indicator that is based on Dominic McCann’s work explained in more detail in &lt;a href=&quot;http://carbon.coop/blog/zapaman/community-smart-grid-prosumer-perspective-part-2&quot;&gt;Dominic’s blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/smartgrid2.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>Trystan Lea</name></author><summary>One of the main problems with looking at demand at the single household level is that demand at this level is very spiky, there are often long periods of low use around 100W and then suddenly a kettle or electric car charger turns on and demand increases by 20-30x in an instant. Solar generation can be very spiky too and so there is room for matching but it can be difficult to get the timing right.

One solution to increasing supply &amp;amp; demand matching at the household level is to have in home battery storage and diversion to hot water stores – but it may not be the best solution for all cases.

Aggregating supply and demand across households provides an example of how the degree of matching can be increased significantly by what could be described as sequential demand. Not everyone boils a kettle at the same time or a cloud passing over one households solar pv system may not be passing over another’s.

In order to explore the extent of increased matching possible through aggregation of supply and demand I have been working with Dominic McCann from Carbon Coop on what could be called a ‘virtual microgrid’ concept, we have a provisional front page for this here - please note that its still in early development:</summary></entry><entry><title>Part 2: Exploring carbon intensity and renewable energy matching</title><link href="https://blog.openenergymonitor.org/2016/04/Part2-Exploring-carbon-intensity/" rel="alternate" type="text/html" title="Part 2: Exploring carbon intensity and renewable energy matching" /><published>2016-04-28T15:00:00+00:00</published><updated>2016-04-28T15:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/04/Part2-Exploring-carbon-intensity</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/04/Part2-Exploring-carbon-intensity/">&lt;p&gt;&lt;img src=&quot;/images/winderful.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This post describes an approach we have been exploring that uses the MyEnergy emoncms app and work on virtual &lt;a href=&quot;https://github.com/TrystanLea/VirtualSmartGrid&quot;&gt;smart grids&lt;/a&gt; with Dominic McCann from Carbon Coop. There’s a good blog and video on what we’ve been working on over on the &lt;a href=&quot;http://carbon.coop/blog/jonathan/smart-grid-aggregation-dashboard-prototype&quot;&gt;Carbon Coop blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;/2016/04/Understand-CO2-intensity-grid-electricity/&quot;&gt;last post&lt;/a&gt; described two approaches to grid carbon intensity that consider the UK grid as a whole. This approach explores what the overall household carbon intensity might be when on-site renewable energy is considered such as home solar but also when renewable energy is bought over the grid, this could be from a green electricity tariff.&lt;/p&gt;

&lt;p&gt;If imported electricity is supplied from a 100% renewable energy supplier in the UK: a large portion of the supply will likely be wind energy (54% of good energy’s ‘fuel’ mix comes from wind) and the UK has the best wind resource in Europe. Incorporating grid wind data and exploring matching with wind and solar, means we can really start to test scenarios such as ZeroCarbonBritain in the present.&lt;/p&gt;

&lt;p&gt;There is real-time data available on UK wind supply and its possible to scale the total UK wind output in order to estimate a household ‘share of UK wind’ in real-time.&lt;/p&gt;

&lt;!--more--&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Calculating a households share of real-time wind output

Between March 2015 and March 2016 the output of UK wind power was on average 2630MW.

If a household buys 54% of 3300 kWh (typical annual household electricity consumption) or about 1800 kWh this converts to an average power of 205 Watts.

The scaling factor to convert total wind power output in MW to a household share is therefore:

scaling factor = 205 W / 2630 MW

The wind power available at any given moment would then be

wind power available = ( 205W / 2630MW ) x uk wind power output (MW)

If total UK wind power is 4000MW the estimated amount available in this example for the household is = (205W/2630MW) x 4000MW = 312 Watts.

Over the year the average available wind power for the household will work out to being 205W but for any given moment it could be more or less than this depending on how much power is being generated at that moment.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With data on household demand, onsite solar and a share of UK wind, we then work out how much backup supply is needed and from this an estimate of household CO2 intensity.&lt;/p&gt;

&lt;p&gt;The backup CO2 intensity could be a single source such as CCGT gas power or a grid CO2 intensity with the wind power component removed in order to avoid double counting. Using an intensity based on grid: coal, gas, nuclear and interconnectors with the wind component removed may help incentivise use outside of peak periods but as discussed in the last post an extended analysis would be needed to establish what’s best from a carbon perspective.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/week6.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Above: Emoncms MyEnergy App showing onsite solar (yellow), share of uk wind estimate (green) and household demand (blue). Available on emoncms.org or self-hosted installations.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The average CO2 intensities that result from this approach depend on the degree of matching between household demand and the renewable supply. From our experience so far matching can be anywhere between 40% and 70% depending on the nature of the household demand and how much demand shifting effort is undertaken. The resulting average carbon intensity is directly proportional to the level of matching: 40% matching means we need backup supply to cover 60% of the demand reducing the carbon intensity by 40% compared to grid average or perhaps CCGT gas CO2 intensity.&lt;/p&gt;

&lt;p&gt;While far from perfect as no account is taken of what is actually happening on the local network, this approach could be seen as a good middle ground between on the one hand saying that all grid electricity has to be counted at grid average carbon intensity and on the other that all electricity from a green tariff is zero carbon at all times. It provides an incentive for demand shifting to times of high renewable output, while reflecting a substantial carbon reduction benefit that should be available from buying renewable energy across the grid.&lt;/p&gt;

&lt;h3 id=&quot;excessexported-renewable-energy&quot;&gt;Excess/exported renewable energy&lt;/h3&gt;
&lt;p&gt;There is an interesting question as to what happens to excess renewable energy not used by the household in this approach. If the energy is exported to the grid and used by others effectively displacing otherwise needed fossil fuel generation then this carbon saving could offset the carbon emissions emitted by the household when backup electricity was used. The result could mean that regardless of the degree of matching achieved between renewable supply and demand, whether on-site solar or wider grid renewable, the household could achieve net zero carbon by generating and equal amount of renewable supply as demand over a longer time period such as a year. This is a commonly used argument for net zero buildings. On the one hand it makes sense but on the other it relies on there being a wider fossil fuel powered grid in order to displace the fossil fuel generation and it substantially removes the incentive for renewable supply/demand matching.&lt;/p&gt;

&lt;h3 id=&quot;displaced-carbon&quot;&gt;Displaced carbon&lt;/h3&gt;
&lt;p&gt;Perhaps a better way to look at the displaced carbon issue is who is it that actually gets to claim the zero carbon benefit of that electricity. It would make sense that exported electricity is sold and then bought by the other party, once you’re buying renewable energy you would expect to be able to claim the zero carbon benefit of that energy as the user. Counting the exported electricity if bought by another user as displaced carbon would result in double counting in this case.&lt;/p&gt;

&lt;p&gt;This is somewhat complicated by fact that exported solar pv electricity is not metered for small domestic installations in the UK. Instead the amount exported is assumed to be 50% of total generation. The exported electricity is paid for at around 4.91p/kWh but not measured. It’s not clear who gets to claim the carbon saved.&lt;/p&gt;

&lt;h3 id=&quot;next-aggregation&quot;&gt;Next: Aggregation&lt;/h3&gt;
&lt;p&gt;The degree of matching can be increased by aggregating supply and demand across several households. Not everyone boils a kettle at the same time or a cloud passing over one households solar pv system may not be passing over another’s. We have been testing with a limited number of households so far, the effect of aggregation on the degree of supply/demand matching which I will come on to in the next post.&lt;/p&gt;</content><author><name>Trystan Lea</name></author><summary>This post describes an approach we have been exploring that uses the MyEnergy emoncms app and work on virtual smart grids with Dominic McCann from Carbon Coop. There’s a good blog and video on what we’ve been working on over on the Carbon Coop blog.

The last post described two approaches to grid carbon intensity that consider the UK grid as a whole. This approach explores what the overall household carbon intensity might be when on-site renewable energy is considered such as home solar but also when renewable energy is bought over the grid, this could be from a green electricity tariff.

If imported electricity is supplied from a 100% renewable energy supplier in the UK: a large portion of the supply will likely be wind energy (54% of good energy’s ‘fuel’ mix comes from wind) and the UK has the best wind resource in Europe. Incorporating grid wind data and exploring matching with wind and solar, means we can really start to test scenarios such as ZeroCarbonBritain in the present.

There is real-time data available on UK wind supply and its possible to scale the total UK wind output in order to estimate a household ‘share of UK wind’ in real-time.</summary></entry><entry><title>Part 1: Attempting to measure and understand the CO2 intensity of grid electricity</title><link href="https://blog.openenergymonitor.org/2016/04/Understand-CO2-intensity-grid-electricity/" rel="alternate" type="text/html" title="Part 1: Attempting to measure and understand the CO2 intensity of grid electricity" /><published>2016-04-27T15:00:00+00:00</published><updated>2016-04-27T15:00:00+00:00</updated><id>https://blog.openenergymonitor.org/2016/04/Understand-CO2-intensity-grid-electricity</id><content type="html" xml:base="https://blog.openenergymonitor.org/2016/04/Understand-CO2-intensity-grid-electricity/">&lt;p&gt;Zero carbon energy scenarios such as &lt;a href=&quot;http://zerocarbonbritain.org/&quot;&gt;ZeroCarbonBritain&lt;/a&gt; feature significant electrification of energy demands previously provided by fossil fuels such as heating and transport. With electrification it becomes possible to supply these energy demands with renewably generated electricity from primarily wind, solar and backed up by storage technologies from short term stores such as batteries to long term stores such as power to gas.&lt;/p&gt;

&lt;p&gt;We do not of course yet have a zero carbon grid. However there has been significant growth of renewable energy and a decline in coal generation in recent years.&lt;/p&gt;

&lt;p&gt;The CO2 emissions of demand side solutions such as heat pumps and electric vehicles are significantly affected by the co2 intensity of the supply but in many cases installing and using these technologies make sense at the UK’s present supply mix and can make more or less sense depending on how you calculate co2 intensity and where you assume the additional electricity required comes from.&lt;/p&gt;

&lt;!--more--&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;As an example the CO2 intensity of combined cycle gas turbines (CCGT) which provide the majority of electricity generated from gas in the UK have a co2 intensity of 360gCO2/kWh.

At this intensity a well installed heat pump that achieves an average COP of 3.0 delivers heat at a CO2 intensity of 129gCO2/kWh heat including 7% grid losses. This provides a significant 44% co2 emissions reduction compared to having an efficient gas boiler which delivers heat at a CO2 intensity of 230gCO2/kWh.

An electric car achieving a real world mountainous north Wales terrain driving efficiency of 3.7 miles per kWh (5.9km/kWh) including charging losses powered by gas electricity has a co2 intensity of 61gCO2/kWh which again provides a significant 44% co2 emissions reduction compared to real world efficient small petrol car co2 emissions of110 gCO2/km based on: 10.6 kgCO2 per gallon [1] and 60mpg (typical of the most efficient small car real world mpg [2].
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.carbonindependent.org/sources_car.html&quot;&gt;[1]&lt;/a&gt;
&lt;a href=&quot;http://www.whatcar.com/car-news/real-world-mpg-efficient-small-cars/1214063&quot;&gt;[2]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The average CO2 intensity for the UK grid as a whole in 2015 was &lt;a href=&quot;http://www.earth.org.uk/note-on-UK-grid-CO2-intensity-variations.html&quot;&gt;367gCO2/kWh&lt;/a&gt; http://www.earth.org.uk/note-on-UK-grid-CO2-intensity-variations.html#fullyear2015 - providing similar CO2 emission reduction potential to the gas only calculations above.&lt;/p&gt;

&lt;p&gt;It is interesting to note that this average, results from coal generation with a CO2 intensity of 910gCO2/kWh being offset somewhat by generation from renewable energy and nuclear at 0gCO2/kWh resulting in a CO2 intensity that is close to what it would be if gas CCGT was our only supply source – which really highlights how carbon intensive coal is.&lt;/p&gt;

&lt;p&gt;When we move energy demands from one form to another such as replacing a gas boiler with a heat pump the carbon reduction benefits depend heavily on what kind of generation provides for that additional demand. If the additional demand is provided for by CCGT gas turbines the switch makes sense, if it is provided by coal generation at 910gCO2/kWh it does not make so much sense. If it is provided by mix of renewable energy and CCGT is will make even more sense.&lt;/p&gt;

&lt;p&gt;There are several different approaches to calculating the co2 intensity of delivered electricity each with their benefits and drawbacks which I will try and explore below and in further posts.&lt;/p&gt;

&lt;p&gt;Whole grid averageHere we consider the grid as one big system with the CO2 intensity calculated as the total CO2 emitted by all forms of generation divided by the total demand over an extended period of time – one or more years. The co2 intensity of the UK electricity grid for 2015 was 367gCO2/kWh.&lt;/p&gt;

&lt;p&gt;Near real-time co2 intensity using grid wide data&lt;/p&gt;

&lt;p&gt;Here the CO2 intensity is calculated by the total CO2 emitted divided by total demand on typically a 10 minute basis. The CO2 intensity calculated this way will often show higher CO2 intensity in the day where gas and coal are a larger percentage of overall supply than at night time. CO2 intensity is also higher when its colder where demand is pushed up by higher heating requirements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ukgrid.png&quot; alt=&quot;UK Grid Carbon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://openenergymonitor.org/ukgrid&quot;&gt;OpenEnergyMonitor UK Grid page&lt;/a&gt; showing real-time CO2 Intensity.&lt;/p&gt;

&lt;p&gt;If we use this real-time CO2 intensity in order to choose when to use electricity it gets more complicated, we may decide to shift electric vehicle charging or heat pump hot water heating to the night time in order to make use of grid carbon intensities that can often be 50-100gCO2/kWh less than day-time rates, but is this really a valid approach? The lower CO2 intensities at night are as a result of demand being lower and nuclear + renewables making up a larger share of generation, if night time demand is increased through demand shifting, turning on more gas and coal power plants, the carbon intensity would increase as well.&lt;/p&gt;

&lt;p&gt;Given that most of the dis-patchable generation is gas and coal and assuming low levels of wind curtailment at night then it could be argued that the effective carbon intensity of moving demand to the night time should be calculated at the carbon intensity of this dis-patchable generation which depends on the proportion of gas to coal, a more in depth understanding as to how the proportion of gas and coal generation is decided would be needed to assess the carbon value of demand shifting. If the proportions are constant, shifting would make no difference, if gas is ramped up to meet the additional demand there may well be a benefit to shifting on the other hand if the difference is made up with more coal generation there would not be. There’s a bit more on this here using 2011 data from &lt;a href=&quot;http://people.bath.ac.uk/en8sc/GridCarbonIntensity.pdf&quot;&gt;Sam Cooper of Bath University&lt;/a&gt; &lt;a href=&quot;http://www.earth.org.uk/note-on-UK-grid-CO2-intensity-variations.html&quot;&gt;linked from earth notes here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Shifting demand away from peak times may well make sense from a transmission and distribution grid capacity perspective but this is largely a different argument and would require a different calculation to assess. It may also be the case that some wind curtailment does take place although the precise extent of this and where on the grid using more will reduce curtailment is difficult to quantify.&lt;/p&gt;

&lt;p&gt;In the next blog I will discuss the work I’ve been doing with Dominic McCann from the Carbon Coop on estimating CO2 intensity with onsite and green tariff renewable energy considered.&lt;/p&gt;</content><author><name>Trystan Lea</name></author><summary>Zero carbon energy scenarios such as ZeroCarbonBritain feature significant electrification of energy demands previously provided by fossil fuels such as heating and transport. With electrification it becomes possible to supply these energy demands with renewably generated electricity from primarily wind, solar and backed up by storage technologies from short term stores such as batteries to long term stores such as power to gas.

We do not of course yet have a zero carbon grid. However there has been significant growth of renewable energy and a decline in coal generation in recent years.

The CO2 emissions of demand side solutions such as heat pumps and electric vehicles are significantly affected by the co2 intensity of the supply but in many cases installing and using these technologies make sense at the UK’s present supply mix and can make more or less sense depending on how you calculate co2 intensity and where you assume the additional electricity required comes from.</summary></entry></feed>
